ARM GAS  /tmp/cc8SAxjv.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usbh_conf.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_HCD_MspInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_HCD_MspInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_HCD_MspInit:
  26              	.LFB133:
  27              		.file 1 "Src/usbh_conf.c"
   1:Src/usbh_conf.c **** /* USER CODE BEGIN Header */
   2:Src/usbh_conf.c **** /**
   3:Src/usbh_conf.c ****   ******************************************************************************
   4:Src/usbh_conf.c ****   * @file           : usbh_conf.c
   5:Src/usbh_conf.c ****   * @version        : v1.0_Cube
   6:Src/usbh_conf.c ****   * @brief          : This file implements the board support package for the USB host library
   7:Src/usbh_conf.c ****   ******************************************************************************
   8:Src/usbh_conf.c ****   * @attention
   9:Src/usbh_conf.c ****   *
  10:Src/usbh_conf.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  11:Src/usbh_conf.c ****   * All rights reserved.</center></h2>
  12:Src/usbh_conf.c ****   *
  13:Src/usbh_conf.c ****   * This software component is licensed by ST under Ultimate Liberty license
  14:Src/usbh_conf.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:Src/usbh_conf.c ****   * the License. You may obtain a copy of the License at:
  16:Src/usbh_conf.c ****   *                             www.st.com/SLA0044
  17:Src/usbh_conf.c ****   *
  18:Src/usbh_conf.c ****   ******************************************************************************
  19:Src/usbh_conf.c ****   */
  20:Src/usbh_conf.c **** /* USER CODE END Header */
  21:Src/usbh_conf.c **** 
  22:Src/usbh_conf.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/usbh_conf.c **** #include "usbh_core.h"
  24:Src/usbh_conf.c **** #include "usbh_platform.h"
  25:Src/usbh_conf.c **** 
  26:Src/usbh_conf.c **** /* USER CODE BEGIN Includes */
  27:Src/usbh_conf.c **** 
  28:Src/usbh_conf.c **** /* USER CODE END Includes */
  29:Src/usbh_conf.c **** 
  30:Src/usbh_conf.c **** /* Private typedef -----------------------------------------------------------*/
  31:Src/usbh_conf.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/cc8SAxjv.s 			page 2


  32:Src/usbh_conf.c **** /* Private macro -------------------------------------------------------------*/
  33:Src/usbh_conf.c **** 
  34:Src/usbh_conf.c **** /* USER CODE BEGIN PV */
  35:Src/usbh_conf.c **** /* Private variables ---------------------------------------------------------*/
  36:Src/usbh_conf.c **** 
  37:Src/usbh_conf.c **** /* USER CODE END PV */
  38:Src/usbh_conf.c **** 
  39:Src/usbh_conf.c **** HCD_HandleTypeDef hhcd_USB_OTG_FS;
  40:Src/usbh_conf.c **** void Error_Handler(void);
  41:Src/usbh_conf.c **** 
  42:Src/usbh_conf.c **** /* USER CODE BEGIN 0 */
  43:Src/usbh_conf.c **** 
  44:Src/usbh_conf.c **** /* USER CODE END 0 */
  45:Src/usbh_conf.c **** 
  46:Src/usbh_conf.c **** /* USER CODE BEGIN PFP */
  47:Src/usbh_conf.c **** /* Private function prototypes -----------------------------------------------*/
  48:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_Get_USB_Status(HAL_StatusTypeDef hal_status);
  49:Src/usbh_conf.c **** 
  50:Src/usbh_conf.c **** /* USER CODE END PFP */
  51:Src/usbh_conf.c **** 
  52:Src/usbh_conf.c **** /* Private functions ---------------------------------------------------------*/
  53:Src/usbh_conf.c **** 
  54:Src/usbh_conf.c **** /* USER CODE BEGIN 1 */
  55:Src/usbh_conf.c **** 
  56:Src/usbh_conf.c **** /* USER CODE END 1 */
  57:Src/usbh_conf.c **** 
  58:Src/usbh_conf.c **** /*******************************************************************************
  59:Src/usbh_conf.c ****                        LL Driver Callbacks (HCD -> USB Host Library)
  60:Src/usbh_conf.c **** *******************************************************************************/
  61:Src/usbh_conf.c **** /* MSP Init */
  62:Src/usbh_conf.c **** 
  63:Src/usbh_conf.c **** void HAL_HCD_MspInit(HCD_HandleTypeDef* hcdHandle)
  64:Src/usbh_conf.c **** {
  28              		.loc 1 64 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 30B5     		push	{r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 89B0     		sub	sp, sp, #36
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
  65:Src/usbh_conf.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 65 0
  43 0004 0023     		movs	r3, #0
  44 0006 0393     		str	r3, [sp, #12]
  45 0008 0493     		str	r3, [sp, #16]
  46 000a 0593     		str	r3, [sp, #20]
  47 000c 0693     		str	r3, [sp, #24]
  48 000e 0793     		str	r3, [sp, #28]
  66:Src/usbh_conf.c ****   if(hcdHandle->Instance==USB_OTG_FS)
  49              		.loc 1 66 0
ARM GAS  /tmp/cc8SAxjv.s 			page 3


  50 0010 0368     		ldr	r3, [r0]
  51 0012 B3F1A04F 		cmp	r3, #1342177280
  52 0016 01D0     		beq	.L4
  53              	.LVL1:
  54              	.L1:
  67:Src/usbh_conf.c ****   {
  68:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspInit 0 */
  69:Src/usbh_conf.c **** 
  70:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspInit 0 */
  71:Src/usbh_conf.c ****   
  72:Src/usbh_conf.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  73:Src/usbh_conf.c ****     /**USB_OTG_FS GPIO Configuration    
  74:Src/usbh_conf.c ****     PA10     ------> USB_OTG_FS_ID
  75:Src/usbh_conf.c ****     PA11     ------> USB_OTG_FS_DM
  76:Src/usbh_conf.c ****     PA12     ------> USB_OTG_FS_DP 
  77:Src/usbh_conf.c ****     */
  78:Src/usbh_conf.c ****     GPIO_InitStruct.Pin = USB_OTGFS_ID_Pin|USB_OTGFS_DM_Pin|USB_OTGFS_DP_Pin;
  79:Src/usbh_conf.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  80:Src/usbh_conf.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  81:Src/usbh_conf.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  82:Src/usbh_conf.c ****     GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
  83:Src/usbh_conf.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  84:Src/usbh_conf.c **** 
  85:Src/usbh_conf.c ****     /* Peripheral clock enable */
  86:Src/usbh_conf.c ****     __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
  87:Src/usbh_conf.c **** 
  88:Src/usbh_conf.c ****     /* Peripheral interrupt init */
  89:Src/usbh_conf.c ****     HAL_NVIC_SetPriority(OTG_FS_IRQn, 0, 0);
  90:Src/usbh_conf.c ****     HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
  91:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */
  92:Src/usbh_conf.c **** 
  93:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspInit 1 */
  94:Src/usbh_conf.c ****   }
  95:Src/usbh_conf.c **** }
  55              		.loc 1 95 0
  56 0018 09B0     		add	sp, sp, #36
  57              	.LCFI2:
  58              		.cfi_remember_state
  59              		.cfi_def_cfa_offset 12
  60              		@ sp needed
  61 001a 30BD     		pop	{r4, r5, pc}
  62              	.LVL2:
  63              	.L4:
  64              	.LCFI3:
  65              		.cfi_restore_state
  66              	.LBB2:
  72:Src/usbh_conf.c ****     /**USB_OTG_FS GPIO Configuration    
  67              		.loc 1 72 0
  68 001c 0025     		movs	r5, #0
  69 001e 0195     		str	r5, [sp, #4]
  70 0020 164C     		ldr	r4, .L5
  71 0022 236B     		ldr	r3, [r4, #48]
  72 0024 43F00103 		orr	r3, r3, #1
  73 0028 2363     		str	r3, [r4, #48]
  74 002a 236B     		ldr	r3, [r4, #48]
  75 002c 03F00103 		and	r3, r3, #1
  76 0030 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/cc8SAxjv.s 			page 4


  77 0032 019B     		ldr	r3, [sp, #4]
  78              	.LBE2:
  78:Src/usbh_conf.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  79              		.loc 1 78 0
  80 0034 4FF4E053 		mov	r3, #7168
  81 0038 0393     		str	r3, [sp, #12]
  79:Src/usbh_conf.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  82              		.loc 1 79 0
  83 003a 0223     		movs	r3, #2
  84 003c 0493     		str	r3, [sp, #16]
  81:Src/usbh_conf.c ****     GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
  85              		.loc 1 81 0
  86 003e 0323     		movs	r3, #3
  87 0040 0693     		str	r3, [sp, #24]
  82:Src/usbh_conf.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  88              		.loc 1 82 0
  89 0042 0A23     		movs	r3, #10
  90 0044 0793     		str	r3, [sp, #28]
  83:Src/usbh_conf.c **** 
  91              		.loc 1 83 0
  92 0046 03A9     		add	r1, sp, #12
  93 0048 0D48     		ldr	r0, .L5+4
  94              	.LVL3:
  95 004a FFF7FEFF 		bl	HAL_GPIO_Init
  96              	.LVL4:
  86:Src/usbh_conf.c **** 
  97              		.loc 1 86 0
  98 004e 636B     		ldr	r3, [r4, #52]
  99 0050 43F08003 		orr	r3, r3, #128
 100 0054 6363     		str	r3, [r4, #52]
 101              	.LBB3:
 102 0056 0295     		str	r5, [sp, #8]
 103 0058 636C     		ldr	r3, [r4, #68]
 104 005a 43F48043 		orr	r3, r3, #16384
 105 005e 6364     		str	r3, [r4, #68]
 106 0060 636C     		ldr	r3, [r4, #68]
 107 0062 03F48043 		and	r3, r3, #16384
 108 0066 0293     		str	r3, [sp, #8]
 109 0068 029B     		ldr	r3, [sp, #8]
 110              	.LBE3:
  89:Src/usbh_conf.c ****     HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
 111              		.loc 1 89 0
 112 006a 2A46     		mov	r2, r5
 113 006c 2946     		mov	r1, r5
 114 006e 4320     		movs	r0, #67
 115 0070 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 116              	.LVL5:
  90:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */
 117              		.loc 1 90 0
 118 0074 4320     		movs	r0, #67
 119 0076 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 120              	.LVL6:
 121              		.loc 1 95 0
 122 007a CDE7     		b	.L1
 123              	.L6:
 124              		.align	2
 125              	.L5:
ARM GAS  /tmp/cc8SAxjv.s 			page 5


 126 007c 00380240 		.word	1073887232
 127 0080 00000240 		.word	1073872896
 128              		.cfi_endproc
 129              	.LFE133:
 131              		.section	.text.HAL_HCD_MspDeInit,"ax",%progbits
 132              		.align	1
 133              		.global	HAL_HCD_MspDeInit
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu fpv4-sp-d16
 139              	HAL_HCD_MspDeInit:
 140              	.LFB134:
  96:Src/usbh_conf.c **** 
  97:Src/usbh_conf.c **** void HAL_HCD_MspDeInit(HCD_HandleTypeDef* hcdHandle)
  98:Src/usbh_conf.c **** {
 141              		.loc 1 98 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              	.LVL7:
 146 0000 08B5     		push	{r3, lr}
 147              	.LCFI4:
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 3, -8
 150              		.cfi_offset 14, -4
  99:Src/usbh_conf.c ****   if(hcdHandle->Instance==USB_OTG_FS)
 151              		.loc 1 99 0
 152 0002 0368     		ldr	r3, [r0]
 153 0004 B3F1A04F 		cmp	r3, #1342177280
 154 0008 00D0     		beq	.L10
 155              	.LVL8:
 156              	.L7:
 100:Src/usbh_conf.c ****   {
 101:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspDeInit 0 */
 102:Src/usbh_conf.c **** 
 103:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspDeInit 0 */
 104:Src/usbh_conf.c ****     /* Peripheral clock disable */
 105:Src/usbh_conf.c ****     __HAL_RCC_USB_OTG_FS_CLK_DISABLE();
 106:Src/usbh_conf.c ****   
 107:Src/usbh_conf.c ****     /**USB_OTG_FS GPIO Configuration    
 108:Src/usbh_conf.c ****     PA10     ------> USB_OTG_FS_ID
 109:Src/usbh_conf.c ****     PA11     ------> USB_OTG_FS_DM
 110:Src/usbh_conf.c ****     PA12     ------> USB_OTG_FS_DP 
 111:Src/usbh_conf.c ****     */
 112:Src/usbh_conf.c ****     HAL_GPIO_DeInit(GPIOA, USB_OTGFS_ID_Pin|USB_OTGFS_DM_Pin|USB_OTGFS_DP_Pin);
 113:Src/usbh_conf.c **** 
 114:Src/usbh_conf.c ****     /* Peripheral interrupt Deinit*/
 115:Src/usbh_conf.c ****     HAL_NVIC_DisableIRQ(OTG_FS_IRQn);
 116:Src/usbh_conf.c **** 
 117:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspDeInit 1 */
 118:Src/usbh_conf.c **** 
 119:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspDeInit 1 */
 120:Src/usbh_conf.c ****   }
 121:Src/usbh_conf.c **** }
 157              		.loc 1 121 0
 158 000a 08BD     		pop	{r3, pc}
ARM GAS  /tmp/cc8SAxjv.s 			page 6


 159              	.LVL9:
 160              	.L10:
 105:Src/usbh_conf.c ****   
 161              		.loc 1 105 0
 162 000c 064A     		ldr	r2, .L11
 163 000e 536B     		ldr	r3, [r2, #52]
 164 0010 23F08003 		bic	r3, r3, #128
 165 0014 5363     		str	r3, [r2, #52]
 112:Src/usbh_conf.c **** 
 166              		.loc 1 112 0
 167 0016 4FF4E051 		mov	r1, #7168
 168 001a 0448     		ldr	r0, .L11+4
 169              	.LVL10:
 170 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 171              	.LVL11:
 115:Src/usbh_conf.c **** 
 172              		.loc 1 115 0
 173 0020 4320     		movs	r0, #67
 174 0022 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 175              	.LVL12:
 176              		.loc 1 121 0
 177 0026 F0E7     		b	.L7
 178              	.L12:
 179              		.align	2
 180              	.L11:
 181 0028 00380240 		.word	1073887232
 182 002c 00000240 		.word	1073872896
 183              		.cfi_endproc
 184              	.LFE134:
 186              		.section	.text.HAL_HCD_SOF_Callback,"ax",%progbits
 187              		.align	1
 188              		.global	HAL_HCD_SOF_Callback
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 192              		.fpu fpv4-sp-d16
 194              	HAL_HCD_SOF_Callback:
 195              	.LFB135:
 122:Src/usbh_conf.c **** 
 123:Src/usbh_conf.c **** /**
 124:Src/usbh_conf.c ****   * @brief  SOF callback.
 125:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 126:Src/usbh_conf.c ****   * @retval None
 127:Src/usbh_conf.c ****   */
 128:Src/usbh_conf.c **** void HAL_HCD_SOF_Callback(HCD_HandleTypeDef *hhcd)
 129:Src/usbh_conf.c **** {
 196              		.loc 1 129 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              	.LVL13:
 201 0000 08B5     		push	{r3, lr}
 202              	.LCFI5:
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 3, -8
 205              		.cfi_offset 14, -4
 130:Src/usbh_conf.c ****   USBH_LL_IncTimer(hhcd->pData);
ARM GAS  /tmp/cc8SAxjv.s 			page 7


 206              		.loc 1 130 0
 207 0002 D0F8C002 		ldr	r0, [r0, #704]
 208              	.LVL14:
 209 0006 FFF7FEFF 		bl	USBH_LL_IncTimer
 210              	.LVL15:
 131:Src/usbh_conf.c **** }
 211              		.loc 1 131 0
 212 000a 08BD     		pop	{r3, pc}
 213              		.cfi_endproc
 214              	.LFE135:
 216              		.section	.text.HAL_HCD_Connect_Callback,"ax",%progbits
 217              		.align	1
 218              		.global	HAL_HCD_Connect_Callback
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 222              		.fpu fpv4-sp-d16
 224              	HAL_HCD_Connect_Callback:
 225              	.LFB136:
 132:Src/usbh_conf.c **** 
 133:Src/usbh_conf.c **** /**
 134:Src/usbh_conf.c ****   * @brief  SOF callback.
 135:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 136:Src/usbh_conf.c ****   * @retval None
 137:Src/usbh_conf.c ****   */
 138:Src/usbh_conf.c **** void HAL_HCD_Connect_Callback(HCD_HandleTypeDef *hhcd)
 139:Src/usbh_conf.c **** {
 226              		.loc 1 139 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              	.LVL16:
 231 0000 08B5     		push	{r3, lr}
 232              	.LCFI6:
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 3, -8
 235              		.cfi_offset 14, -4
 140:Src/usbh_conf.c ****   USBH_LL_Connect(hhcd->pData);
 236              		.loc 1 140 0
 237 0002 D0F8C002 		ldr	r0, [r0, #704]
 238              	.LVL17:
 239 0006 FFF7FEFF 		bl	USBH_LL_Connect
 240              	.LVL18:
 141:Src/usbh_conf.c **** }
 241              		.loc 1 141 0
 242 000a 08BD     		pop	{r3, pc}
 243              		.cfi_endproc
 244              	.LFE136:
 246              		.section	.text.HAL_HCD_Disconnect_Callback,"ax",%progbits
 247              		.align	1
 248              		.global	HAL_HCD_Disconnect_Callback
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 252              		.fpu fpv4-sp-d16
 254              	HAL_HCD_Disconnect_Callback:
 255              	.LFB137:
ARM GAS  /tmp/cc8SAxjv.s 			page 8


 142:Src/usbh_conf.c **** 
 143:Src/usbh_conf.c **** /**
 144:Src/usbh_conf.c ****   * @brief  SOF callback.
 145:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 146:Src/usbh_conf.c ****   * @retval None
 147:Src/usbh_conf.c ****   */
 148:Src/usbh_conf.c **** void HAL_HCD_Disconnect_Callback(HCD_HandleTypeDef *hhcd)
 149:Src/usbh_conf.c **** {
 256              		.loc 1 149 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              	.LVL19:
 261 0000 08B5     		push	{r3, lr}
 262              	.LCFI7:
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 3, -8
 265              		.cfi_offset 14, -4
 150:Src/usbh_conf.c ****   USBH_LL_Disconnect(hhcd->pData);
 266              		.loc 1 150 0
 267 0002 D0F8C002 		ldr	r0, [r0, #704]
 268              	.LVL20:
 269 0006 FFF7FEFF 		bl	USBH_LL_Disconnect
 270              	.LVL21:
 151:Src/usbh_conf.c **** }
 271              		.loc 1 151 0
 272 000a 08BD     		pop	{r3, pc}
 273              		.cfi_endproc
 274              	.LFE137:
 276              		.section	.text.HAL_HCD_HC_NotifyURBChange_Callback,"ax",%progbits
 277              		.align	1
 278              		.global	HAL_HCD_HC_NotifyURBChange_Callback
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
 282              		.fpu fpv4-sp-d16
 284              	HAL_HCD_HC_NotifyURBChange_Callback:
 285              	.LFB138:
 152:Src/usbh_conf.c **** 
 153:Src/usbh_conf.c **** /**
 154:Src/usbh_conf.c ****   * @brief  Notify URB state change callback.
 155:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 156:Src/usbh_conf.c ****   * @param  chnum: channel number
 157:Src/usbh_conf.c ****   * @param  urb_state: state
 158:Src/usbh_conf.c ****   * @retval None
 159:Src/usbh_conf.c ****   */
 160:Src/usbh_conf.c **** void HAL_HCD_HC_NotifyURBChange_Callback(HCD_HandleTypeDef *hhcd, uint8_t chnum, HCD_URBStateTypeDe
 161:Src/usbh_conf.c **** {
 286              		.loc 1 161 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 291              	.LVL22:
 162:Src/usbh_conf.c ****   /* To be used with OS to sync URB state with the global state machine */
 163:Src/usbh_conf.c **** #if (USBH_USE_OS == 1)
 164:Src/usbh_conf.c ****   USBH_LL_NotifyURBChange(hhcd->pData);
ARM GAS  /tmp/cc8SAxjv.s 			page 9


 165:Src/usbh_conf.c **** #endif
 166:Src/usbh_conf.c **** }
 292              		.loc 1 166 0
 293 0000 7047     		bx	lr
 294              		.cfi_endproc
 295              	.LFE138:
 297              		.section	.text.HAL_HCD_PortEnabled_Callback,"ax",%progbits
 298              		.align	1
 299              		.global	HAL_HCD_PortEnabled_Callback
 300              		.syntax unified
 301              		.thumb
 302              		.thumb_func
 303              		.fpu fpv4-sp-d16
 305              	HAL_HCD_PortEnabled_Callback:
 306              	.LFB139:
 167:Src/usbh_conf.c **** /**
 168:Src/usbh_conf.c **** * @brief  Port Port Enabled callback.
 169:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 170:Src/usbh_conf.c ****   * @retval None
 171:Src/usbh_conf.c ****   */
 172:Src/usbh_conf.c **** void HAL_HCD_PortEnabled_Callback(HCD_HandleTypeDef *hhcd)
 173:Src/usbh_conf.c **** {
 307              		.loc 1 173 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              	.LVL23:
 312 0000 08B5     		push	{r3, lr}
 313              	.LCFI8:
 314              		.cfi_def_cfa_offset 8
 315              		.cfi_offset 3, -8
 316              		.cfi_offset 14, -4
 174:Src/usbh_conf.c ****   USBH_LL_PortEnabled(hhcd->pData);
 317              		.loc 1 174 0
 318 0002 D0F8C002 		ldr	r0, [r0, #704]
 319              	.LVL24:
 320 0006 FFF7FEFF 		bl	USBH_LL_PortEnabled
 321              	.LVL25:
 175:Src/usbh_conf.c **** } 
 322              		.loc 1 175 0
 323 000a 08BD     		pop	{r3, pc}
 324              		.cfi_endproc
 325              	.LFE139:
 327              		.section	.text.HAL_HCD_PortDisabled_Callback,"ax",%progbits
 328              		.align	1
 329              		.global	HAL_HCD_PortDisabled_Callback
 330              		.syntax unified
 331              		.thumb
 332              		.thumb_func
 333              		.fpu fpv4-sp-d16
 335              	HAL_HCD_PortDisabled_Callback:
 336              	.LFB140:
 176:Src/usbh_conf.c **** 
 177:Src/usbh_conf.c **** /**
 178:Src/usbh_conf.c ****   * @brief  Port Port Disabled callback.
 179:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 180:Src/usbh_conf.c ****   * @retval None
ARM GAS  /tmp/cc8SAxjv.s 			page 10


 181:Src/usbh_conf.c ****   */
 182:Src/usbh_conf.c **** void HAL_HCD_PortDisabled_Callback(HCD_HandleTypeDef *hhcd)
 183:Src/usbh_conf.c **** {
 337              		.loc 1 183 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341              	.LVL26:
 342 0000 08B5     		push	{r3, lr}
 343              	.LCFI9:
 344              		.cfi_def_cfa_offset 8
 345              		.cfi_offset 3, -8
 346              		.cfi_offset 14, -4
 184:Src/usbh_conf.c ****   USBH_LL_PortDisabled(hhcd->pData);
 347              		.loc 1 184 0
 348 0002 D0F8C002 		ldr	r0, [r0, #704]
 349              	.LVL27:
 350 0006 FFF7FEFF 		bl	USBH_LL_PortDisabled
 351              	.LVL28:
 185:Src/usbh_conf.c **** } 
 352              		.loc 1 185 0
 353 000a 08BD     		pop	{r3, pc}
 354              		.cfi_endproc
 355              	.LFE140:
 357              		.section	.text.USBH_LL_Init,"ax",%progbits
 358              		.align	1
 359              		.global	USBH_LL_Init
 360              		.syntax unified
 361              		.thumb
 362              		.thumb_func
 363              		.fpu fpv4-sp-d16
 365              	USBH_LL_Init:
 366              	.LFB141:
 186:Src/usbh_conf.c **** 
 187:Src/usbh_conf.c **** /*******************************************************************************
 188:Src/usbh_conf.c ****                        LL Driver Interface (USB Host Library --> HCD)
 189:Src/usbh_conf.c **** *******************************************************************************/
 190:Src/usbh_conf.c **** 
 191:Src/usbh_conf.c **** /**
 192:Src/usbh_conf.c ****   * @brief  Initialize the low level portion of the host driver.
 193:Src/usbh_conf.c ****   * @param  phost: Host handle
 194:Src/usbh_conf.c ****   * @retval USBH status
 195:Src/usbh_conf.c ****   */
 196:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_Init(USBH_HandleTypeDef *phost)
 197:Src/usbh_conf.c **** {
 367              		.loc 1 197 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              	.LVL29:
 198:Src/usbh_conf.c ****   /* Init USB_IP */
 199:Src/usbh_conf.c ****   if (phost->id == HOST_FS) {
 372              		.loc 1 199 0
 373 0000 90F8C033 		ldrb	r3, [r0, #960]	@ zero_extendqisi2
 374 0004 012B     		cmp	r3, #1
 375 0006 01D0     		beq	.L31
 200:Src/usbh_conf.c ****   /* Link the driver to the stack. */
ARM GAS  /tmp/cc8SAxjv.s 			page 11


 201:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.pData = phost;
 202:Src/usbh_conf.c ****   phost->pData = &hhcd_USB_OTG_FS;
 203:Src/usbh_conf.c **** 
 204:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Instance = USB_OTG_FS;
 205:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Host_channels = 8;
 206:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.speed = HCD_SPEED_FULL;
 207:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 208:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.phy_itface = HCD_PHY_EMBEDDED;
 209:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 210:Src/usbh_conf.c ****   if (HAL_HCD_Init(&hhcd_USB_OTG_FS) != HAL_OK)
 211:Src/usbh_conf.c ****   {
 212:Src/usbh_conf.c ****     Error_Handler( );
 213:Src/usbh_conf.c ****   }
 214:Src/usbh_conf.c **** 
 215:Src/usbh_conf.c ****   USBH_LL_SetTimer(phost, HAL_HCD_GetCurrentFrame(&hhcd_USB_OTG_FS));
 216:Src/usbh_conf.c ****   }
 217:Src/usbh_conf.c ****   return USBH_OK;
 218:Src/usbh_conf.c **** }
 376              		.loc 1 218 0
 377 0008 0020     		movs	r0, #0
 378              	.LVL30:
 379 000a 7047     		bx	lr
 380              	.LVL31:
 381              	.L31:
 197:Src/usbh_conf.c ****   /* Init USB_IP */
 382              		.loc 1 197 0
 383 000c 10B5     		push	{r4, lr}
 384              	.LCFI10:
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 4, -8
 387              		.cfi_offset 14, -4
 388 000e 0446     		mov	r4, r0
 201:Src/usbh_conf.c ****   phost->pData = &hhcd_USB_OTG_FS;
 389              		.loc 1 201 0
 390 0010 0F48     		ldr	r0, .L33
 391              	.LVL32:
 392 0012 C0F8C042 		str	r4, [r0, #704]
 202:Src/usbh_conf.c **** 
 393              		.loc 1 202 0
 394 0016 C4F8C403 		str	r0, [r4, #964]
 204:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Host_channels = 8;
 395              		.loc 1 204 0
 396 001a 4FF0A043 		mov	r3, #1342177280
 397 001e 0360     		str	r3, [r0]
 205:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.speed = HCD_SPEED_FULL;
 398              		.loc 1 205 0
 399 0020 0823     		movs	r3, #8
 400 0022 8360     		str	r3, [r0, #8]
 206:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 401              		.loc 1 206 0
 402 0024 0123     		movs	r3, #1
 403 0026 C360     		str	r3, [r0, #12]
 207:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.phy_itface = HCD_PHY_EMBEDDED;
 404              		.loc 1 207 0
 405 0028 0023     		movs	r3, #0
 406 002a 0361     		str	r3, [r0, #16]
 208:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
ARM GAS  /tmp/cc8SAxjv.s 			page 12


 407              		.loc 1 208 0
 408 002c 0222     		movs	r2, #2
 409 002e 8261     		str	r2, [r0, #24]
 209:Src/usbh_conf.c ****   if (HAL_HCD_Init(&hhcd_USB_OTG_FS) != HAL_OK)
 410              		.loc 1 209 0
 411 0030 C361     		str	r3, [r0, #28]
 210:Src/usbh_conf.c ****   {
 412              		.loc 1 210 0
 413 0032 FFF7FEFF 		bl	HAL_HCD_Init
 414              	.LVL33:
 415 0036 40B9     		cbnz	r0, .L32
 416              	.L26:
 215:Src/usbh_conf.c ****   }
 417              		.loc 1 215 0
 418 0038 0548     		ldr	r0, .L33
 419 003a FFF7FEFF 		bl	HAL_HCD_GetCurrentFrame
 420              	.LVL34:
 421 003e 0146     		mov	r1, r0
 422 0040 2046     		mov	r0, r4
 423 0042 FFF7FEFF 		bl	USBH_LL_SetTimer
 424              	.LVL35:
 425              		.loc 1 218 0
 426 0046 0020     		movs	r0, #0
 427 0048 10BD     		pop	{r4, pc}
 428              	.LVL36:
 429              	.L32:
 212:Src/usbh_conf.c ****   }
 430              		.loc 1 212 0
 431 004a FFF7FEFF 		bl	Error_Handler
 432              	.LVL37:
 433 004e F3E7     		b	.L26
 434              	.L34:
 435              		.align	2
 436              	.L33:
 437 0050 00000000 		.word	hhcd_USB_OTG_FS
 438              		.cfi_endproc
 439              	.LFE141:
 441              		.section	.text.USBH_LL_GetSpeed,"ax",%progbits
 442              		.align	1
 443              		.global	USBH_LL_GetSpeed
 444              		.syntax unified
 445              		.thumb
 446              		.thumb_func
 447              		.fpu fpv4-sp-d16
 449              	USBH_LL_GetSpeed:
 450              	.LFB145:
 219:Src/usbh_conf.c **** 
 220:Src/usbh_conf.c **** /**
 221:Src/usbh_conf.c ****   * @brief  De-Initialize the low level portion of the host driver.
 222:Src/usbh_conf.c ****   * @param  phost: Host handle
 223:Src/usbh_conf.c ****   * @retval USBH status
 224:Src/usbh_conf.c ****   */
 225:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_DeInit(USBH_HandleTypeDef *phost)
 226:Src/usbh_conf.c **** {
 227:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 228:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 229:Src/usbh_conf.c **** 
ARM GAS  /tmp/cc8SAxjv.s 			page 13


 230:Src/usbh_conf.c ****   hal_status = HAL_HCD_DeInit(phost->pData);
 231:Src/usbh_conf.c ****   
 232:Src/usbh_conf.c ****   usb_status = USBH_Get_USB_Status(hal_status);
 233:Src/usbh_conf.c ****   
 234:Src/usbh_conf.c ****   return usb_status;
 235:Src/usbh_conf.c **** }
 236:Src/usbh_conf.c **** 
 237:Src/usbh_conf.c **** /**
 238:Src/usbh_conf.c ****   * @brief  Start the low level portion of the host driver.
 239:Src/usbh_conf.c ****   * @param  phost: Host handle
 240:Src/usbh_conf.c ****   * @retval USBH status
 241:Src/usbh_conf.c ****   */
 242:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_Start(USBH_HandleTypeDef *phost)
 243:Src/usbh_conf.c **** {
 244:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 245:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 246:Src/usbh_conf.c **** 
 247:Src/usbh_conf.c ****   hal_status = HAL_HCD_Start(phost->pData);
 248:Src/usbh_conf.c **** 
 249:Src/usbh_conf.c ****   usb_status = USBH_Get_USB_Status(hal_status);
 250:Src/usbh_conf.c ****   
 251:Src/usbh_conf.c ****   return usb_status;
 252:Src/usbh_conf.c **** }
 253:Src/usbh_conf.c **** 
 254:Src/usbh_conf.c **** /**
 255:Src/usbh_conf.c ****   * @brief  Stop the low level portion of the host driver.
 256:Src/usbh_conf.c ****   * @param  phost: Host handle
 257:Src/usbh_conf.c ****   * @retval USBH status
 258:Src/usbh_conf.c ****   */
 259:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_Stop(USBH_HandleTypeDef *phost)
 260:Src/usbh_conf.c **** {
 261:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 262:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 263:Src/usbh_conf.c **** 
 264:Src/usbh_conf.c ****   hal_status = HAL_HCD_Stop(phost->pData);
 265:Src/usbh_conf.c **** 
 266:Src/usbh_conf.c ****   usb_status = USBH_Get_USB_Status(hal_status);
 267:Src/usbh_conf.c ****  
 268:Src/usbh_conf.c ****   return usb_status;
 269:Src/usbh_conf.c **** }
 270:Src/usbh_conf.c **** 
 271:Src/usbh_conf.c **** /**
 272:Src/usbh_conf.c ****   * @brief  Return the USB host speed from the low level driver.
 273:Src/usbh_conf.c ****   * @param  phost: Host handle
 274:Src/usbh_conf.c ****   * @retval USBH speeds
 275:Src/usbh_conf.c ****   */
 276:Src/usbh_conf.c **** USBH_SpeedTypeDef USBH_LL_GetSpeed(USBH_HandleTypeDef *phost)
 277:Src/usbh_conf.c **** {
 451              		.loc 1 277 0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455              	.LVL38:
 456 0000 08B5     		push	{r3, lr}
 457              	.LCFI11:
 458              		.cfi_def_cfa_offset 8
 459              		.cfi_offset 3, -8
ARM GAS  /tmp/cc8SAxjv.s 			page 14


 460              		.cfi_offset 14, -4
 461              	.LVL39:
 278:Src/usbh_conf.c ****   USBH_SpeedTypeDef speed = USBH_SPEED_FULL;
 279:Src/usbh_conf.c **** 
 280:Src/usbh_conf.c ****   switch (HAL_HCD_GetCurrentSpeed(phost->pData))
 462              		.loc 1 280 0
 463 0002 D0F8C403 		ldr	r0, [r0, #964]
 464              	.LVL40:
 465 0006 FFF7FEFF 		bl	HAL_HCD_GetCurrentSpeed
 466              	.LVL41:
 467 000a 18B1     		cbz	r0, .L37
 468 000c 0228     		cmp	r0, #2
 469 000e 03D0     		beq	.L38
 281:Src/usbh_conf.c ****   {
 282:Src/usbh_conf.c ****   case 0 :
 283:Src/usbh_conf.c ****     speed = USBH_SPEED_HIGH;
 284:Src/usbh_conf.c ****     break;
 285:Src/usbh_conf.c **** 
 286:Src/usbh_conf.c ****   case 1 :
 287:Src/usbh_conf.c ****     speed = USBH_SPEED_FULL;
 470              		.loc 1 287 0
 471 0010 0120     		movs	r0, #1
 472              	.LVL42:
 473              	.L36:
 288:Src/usbh_conf.c ****     break;
 289:Src/usbh_conf.c **** 
 290:Src/usbh_conf.c ****   case 2 :
 291:Src/usbh_conf.c ****     speed = USBH_SPEED_LOW;
 292:Src/usbh_conf.c ****     break;
 293:Src/usbh_conf.c **** 
 294:Src/usbh_conf.c ****   default:
 295:Src/usbh_conf.c ****    speed = USBH_SPEED_FULL;
 296:Src/usbh_conf.c ****     break;
 297:Src/usbh_conf.c ****   }
 298:Src/usbh_conf.c ****   return  speed;
 299:Src/usbh_conf.c **** }
 474              		.loc 1 299 0
 475 0012 08BD     		pop	{r3, pc}
 476              	.LVL43:
 477              	.L37:
 283:Src/usbh_conf.c ****     break;
 478              		.loc 1 283 0
 479 0014 0020     		movs	r0, #0
 480 0016 FCE7     		b	.L36
 481              	.L38:
 482              	.LVL44:
 291:Src/usbh_conf.c ****     break;
 483              		.loc 1 291 0
 484 0018 0220     		movs	r0, #2
 292:Src/usbh_conf.c **** 
 485              		.loc 1 292 0
 486 001a FAE7     		b	.L36
 487              		.cfi_endproc
 488              	.LFE145:
 490              		.section	.text.USBH_LL_GetLastXferSize,"ax",%progbits
 491              		.align	1
 492              		.global	USBH_LL_GetLastXferSize
ARM GAS  /tmp/cc8SAxjv.s 			page 15


 493              		.syntax unified
 494              		.thumb
 495              		.thumb_func
 496              		.fpu fpv4-sp-d16
 498              	USBH_LL_GetLastXferSize:
 499              	.LFB147:
 300:Src/usbh_conf.c **** 
 301:Src/usbh_conf.c **** /**
 302:Src/usbh_conf.c ****   * @brief  Reset the Host port of the low level driver.
 303:Src/usbh_conf.c ****   * @param  phost: Host handle
 304:Src/usbh_conf.c ****   * @retval USBH status
 305:Src/usbh_conf.c ****   */
 306:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_ResetPort(USBH_HandleTypeDef *phost)
 307:Src/usbh_conf.c **** {
 308:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 309:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 310:Src/usbh_conf.c **** 
 311:Src/usbh_conf.c ****   hal_status = HAL_HCD_ResetPort(phost->pData);
 312:Src/usbh_conf.c ****   
 313:Src/usbh_conf.c ****   usb_status = USBH_Get_USB_Status(hal_status);
 314:Src/usbh_conf.c ****   
 315:Src/usbh_conf.c ****   return usb_status;
 316:Src/usbh_conf.c **** }
 317:Src/usbh_conf.c **** 
 318:Src/usbh_conf.c **** /**
 319:Src/usbh_conf.c ****   * @brief  Return the last transfered packet size.
 320:Src/usbh_conf.c ****   * @param  phost: Host handle
 321:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 322:Src/usbh_conf.c ****   * @retval Packet size
 323:Src/usbh_conf.c ****   */
 324:Src/usbh_conf.c **** uint32_t USBH_LL_GetLastXferSize(USBH_HandleTypeDef *phost, uint8_t pipe)
 325:Src/usbh_conf.c **** {
 500              		.loc 1 325 0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 504              	.LVL45:
 505 0000 08B5     		push	{r3, lr}
 506              	.LCFI12:
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 3, -8
 509              		.cfi_offset 14, -4
 326:Src/usbh_conf.c ****   return HAL_HCD_HC_GetXferCount(phost->pData, pipe);
 510              		.loc 1 326 0
 511 0002 D0F8C403 		ldr	r0, [r0, #964]
 512              	.LVL46:
 513 0006 FFF7FEFF 		bl	HAL_HCD_HC_GetXferCount
 514              	.LVL47:
 327:Src/usbh_conf.c **** }
 515              		.loc 1 327 0
 516 000a 08BD     		pop	{r3, pc}
 517              		.cfi_endproc
 518              	.LFE147:
 520              		.section	.text.USBH_LL_GetURBState,"ax",%progbits
 521              		.align	1
 522              		.global	USBH_LL_GetURBState
 523              		.syntax unified
ARM GAS  /tmp/cc8SAxjv.s 			page 16


 524              		.thumb
 525              		.thumb_func
 526              		.fpu fpv4-sp-d16
 528              	USBH_LL_GetURBState:
 529              	.LFB151:
 328:Src/usbh_conf.c **** 
 329:Src/usbh_conf.c **** /**
 330:Src/usbh_conf.c ****   * @brief  Open a pipe of the low level driver.
 331:Src/usbh_conf.c ****   * @param  phost: Host handle
 332:Src/usbh_conf.c ****   * @param  pipe_num: Pipe index
 333:Src/usbh_conf.c ****   * @param  epnum: Endpoint number
 334:Src/usbh_conf.c ****   * @param  dev_address: Device USB address
 335:Src/usbh_conf.c ****   * @param  speed: Device Speed
 336:Src/usbh_conf.c ****   * @param  ep_type: Endpoint type
 337:Src/usbh_conf.c ****   * @param  mps: Endpoint max packet size
 338:Src/usbh_conf.c ****   * @retval USBH status
 339:Src/usbh_conf.c ****   */
 340:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_OpenPipe(USBH_HandleTypeDef *phost, uint8_t pipe_num, uint8_t epnum,
 341:Src/usbh_conf.c ****                                     uint8_t dev_address, uint8_t speed, uint8_t ep_type, uint16_t m
 342:Src/usbh_conf.c **** {
 343:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 344:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 345:Src/usbh_conf.c **** 
 346:Src/usbh_conf.c ****   hal_status = HAL_HCD_HC_Init(phost->pData, pipe_num, epnum,
 347:Src/usbh_conf.c ****                                dev_address, speed, ep_type, mps);
 348:Src/usbh_conf.c **** 
 349:Src/usbh_conf.c ****   usb_status = USBH_Get_USB_Status(hal_status);
 350:Src/usbh_conf.c ****   
 351:Src/usbh_conf.c ****   return usb_status;
 352:Src/usbh_conf.c **** }
 353:Src/usbh_conf.c **** 
 354:Src/usbh_conf.c **** /**
 355:Src/usbh_conf.c ****   * @brief  Close a pipe of the low level driver.
 356:Src/usbh_conf.c ****   * @param  phost: Host handle
 357:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 358:Src/usbh_conf.c ****   * @retval USBH status
 359:Src/usbh_conf.c ****   */
 360:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_ClosePipe(USBH_HandleTypeDef *phost, uint8_t pipe)
 361:Src/usbh_conf.c **** {
 362:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 363:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 364:Src/usbh_conf.c **** 
 365:Src/usbh_conf.c ****   hal_status = HAL_HCD_HC_Halt(phost->pData, pipe);
 366:Src/usbh_conf.c **** 
 367:Src/usbh_conf.c ****   usb_status = USBH_Get_USB_Status(hal_status);
 368:Src/usbh_conf.c ****   
 369:Src/usbh_conf.c ****   return usb_status;
 370:Src/usbh_conf.c **** }
 371:Src/usbh_conf.c **** 
 372:Src/usbh_conf.c **** /**
 373:Src/usbh_conf.c ****   * @brief  Submit a new URB to the low level driver.
 374:Src/usbh_conf.c ****   * @param  phost: Host handle
 375:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 376:Src/usbh_conf.c ****   *         This parameter can be a value from 1 to 15
 377:Src/usbh_conf.c ****   * @param  direction : Channel number
 378:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 379:Src/usbh_conf.c ****   *           0 : Output
ARM GAS  /tmp/cc8SAxjv.s 			page 17


 380:Src/usbh_conf.c ****   *           1 : Input
 381:Src/usbh_conf.c ****   * @param  ep_type : Endpoint Type
 382:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 383:Src/usbh_conf.c ****   *            @arg EP_TYPE_CTRL: Control type
 384:Src/usbh_conf.c ****   *            @arg EP_TYPE_ISOC: Isochrounous type
 385:Src/usbh_conf.c ****   *            @arg EP_TYPE_BULK: Bulk type
 386:Src/usbh_conf.c ****   *            @arg EP_TYPE_INTR: Interrupt type
 387:Src/usbh_conf.c ****   * @param  token : Endpoint Type
 388:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 389:Src/usbh_conf.c ****   *            @arg 0: PID_SETUP
 390:Src/usbh_conf.c ****   *            @arg 1: PID_DATA
 391:Src/usbh_conf.c ****   * @param  pbuff : pointer to URB data
 392:Src/usbh_conf.c ****   * @param  length : Length of URB data
 393:Src/usbh_conf.c ****   * @param  do_ping : activate do ping protocol (for high speed only)
 394:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 395:Src/usbh_conf.c ****   *           0 : do ping inactive
 396:Src/usbh_conf.c ****   *           1 : do ping active
 397:Src/usbh_conf.c ****   * @retval Status
 398:Src/usbh_conf.c ****   */
 399:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_SubmitURB(USBH_HandleTypeDef *phost, uint8_t pipe, uint8_t direction,
 400:Src/usbh_conf.c ****                                      uint8_t ep_type, uint8_t token, uint8_t *pbuff, uint16_t lengt
 401:Src/usbh_conf.c ****                                      uint8_t do_ping)
 402:Src/usbh_conf.c **** {
 403:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 404:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 405:Src/usbh_conf.c **** 
 406:Src/usbh_conf.c ****   hal_status = HAL_HCD_HC_SubmitRequest(phost->pData, pipe, direction ,
 407:Src/usbh_conf.c ****                                         ep_type, token, pbuff, length,
 408:Src/usbh_conf.c ****                                         do_ping);
 409:Src/usbh_conf.c ****   usb_status =  USBH_Get_USB_Status(hal_status);
 410:Src/usbh_conf.c ****   
 411:Src/usbh_conf.c ****   return usb_status;
 412:Src/usbh_conf.c **** }
 413:Src/usbh_conf.c **** 
 414:Src/usbh_conf.c **** /**
 415:Src/usbh_conf.c ****   * @brief  Get a URB state from the low level driver.
 416:Src/usbh_conf.c ****   * @param  phost: Host handle
 417:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 418:Src/usbh_conf.c ****   *         This parameter can be a value from 1 to 15
 419:Src/usbh_conf.c ****   * @retval URB state
 420:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 421:Src/usbh_conf.c ****   *            @arg URB_IDLE
 422:Src/usbh_conf.c ****   *            @arg URB_DONE
 423:Src/usbh_conf.c ****   *            @arg URB_NOTREADY
 424:Src/usbh_conf.c ****   *            @arg URB_NYET
 425:Src/usbh_conf.c ****   *            @arg URB_ERROR
 426:Src/usbh_conf.c ****   *            @arg URB_STALL
 427:Src/usbh_conf.c ****   */
 428:Src/usbh_conf.c **** USBH_URBStateTypeDef USBH_LL_GetURBState(USBH_HandleTypeDef *phost, uint8_t pipe)
 429:Src/usbh_conf.c **** {
 530              		.loc 1 429 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 0, uses_anonymous_args = 0
 534              	.LVL48:
 535 0000 08B5     		push	{r3, lr}
 536              	.LCFI13:
ARM GAS  /tmp/cc8SAxjv.s 			page 18


 537              		.cfi_def_cfa_offset 8
 538              		.cfi_offset 3, -8
 539              		.cfi_offset 14, -4
 430:Src/usbh_conf.c ****   return (USBH_URBStateTypeDef)HAL_HCD_HC_GetURBState (phost->pData, pipe);
 540              		.loc 1 430 0
 541 0002 D0F8C403 		ldr	r0, [r0, #964]
 542              	.LVL49:
 543 0006 FFF7FEFF 		bl	HAL_HCD_HC_GetURBState
 544              	.LVL50:
 431:Src/usbh_conf.c **** }
 545              		.loc 1 431 0
 546 000a 08BD     		pop	{r3, pc}
 547              		.cfi_endproc
 548              	.LFE151:
 550              		.section	.text.USBH_LL_DriverVBUS,"ax",%progbits
 551              		.align	1
 552              		.global	USBH_LL_DriverVBUS
 553              		.syntax unified
 554              		.thumb
 555              		.thumb_func
 556              		.fpu fpv4-sp-d16
 558              	USBH_LL_DriverVBUS:
 559              	.LFB152:
 432:Src/usbh_conf.c **** 
 433:Src/usbh_conf.c **** /**
 434:Src/usbh_conf.c ****   * @brief  Drive VBUS.
 435:Src/usbh_conf.c ****   * @param  phost: Host handle
 436:Src/usbh_conf.c ****   * @param  state : VBUS state
 437:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 438:Src/usbh_conf.c ****   *           0 : VBUS Active
 439:Src/usbh_conf.c ****   *           1 : VBUS Inactive
 440:Src/usbh_conf.c ****   * @retval Status
 441:Src/usbh_conf.c ****   */
 442:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_DriverVBUS(USBH_HandleTypeDef *phost, uint8_t state)
 443:Src/usbh_conf.c **** {
 560              		.loc 1 443 0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 0
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 564              	.LVL51:
 565 0000 08B5     		push	{r3, lr}
 566              	.LCFI14:
 567              		.cfi_def_cfa_offset 8
 568              		.cfi_offset 3, -8
 569              		.cfi_offset 14, -4
 444:Src/usbh_conf.c ****   if (phost->id == HOST_FS) {
 570              		.loc 1 444 0
 571 0002 90F8C033 		ldrb	r3, [r0, #960]	@ zero_extendqisi2
 572 0006 012B     		cmp	r3, #1
 573 0008 04D0     		beq	.L49
 574              	.LVL52:
 575              	.L47:
 445:Src/usbh_conf.c ****     MX_DriverVbusFS(state);
 446:Src/usbh_conf.c ****   }
 447:Src/usbh_conf.c **** 
 448:Src/usbh_conf.c ****   /* USER CODE BEGIN 0 */
 449:Src/usbh_conf.c **** 
ARM GAS  /tmp/cc8SAxjv.s 			page 19


 450:Src/usbh_conf.c ****   /* USER CODE END 0*/
 451:Src/usbh_conf.c **** 
 452:Src/usbh_conf.c ****   HAL_Delay(200);
 576              		.loc 1 452 0
 577 000a C820     		movs	r0, #200
 578 000c FFF7FEFF 		bl	HAL_Delay
 579              	.LVL53:
 453:Src/usbh_conf.c ****   return USBH_OK;
 454:Src/usbh_conf.c **** }
 580              		.loc 1 454 0
 581 0010 0020     		movs	r0, #0
 582 0012 08BD     		pop	{r3, pc}
 583              	.LVL54:
 584              	.L49:
 445:Src/usbh_conf.c ****     MX_DriverVbusFS(state);
 585              		.loc 1 445 0
 586 0014 0846     		mov	r0, r1
 587              	.LVL55:
 588 0016 FFF7FEFF 		bl	MX_DriverVbusFS
 589              	.LVL56:
 590 001a F6E7     		b	.L47
 591              		.cfi_endproc
 592              	.LFE152:
 594              		.section	.text.USBH_LL_SetToggle,"ax",%progbits
 595              		.align	1
 596              		.global	USBH_LL_SetToggle
 597              		.syntax unified
 598              		.thumb
 599              		.thumb_func
 600              		.fpu fpv4-sp-d16
 602              	USBH_LL_SetToggle:
 603              	.LFB153:
 455:Src/usbh_conf.c **** 
 456:Src/usbh_conf.c **** /**
 457:Src/usbh_conf.c ****   * @brief  Set toggle for a pipe.
 458:Src/usbh_conf.c ****   * @param  phost: Host handle
 459:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 460:Src/usbh_conf.c ****   * @param  toggle: toggle (0/1)
 461:Src/usbh_conf.c ****   * @retval Status
 462:Src/usbh_conf.c ****   */
 463:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_SetToggle(USBH_HandleTypeDef *phost, uint8_t pipe, uint8_t toggle)
 464:Src/usbh_conf.c **** {
 604              		.loc 1 464 0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 0
 607              		@ frame_needed = 0, uses_anonymous_args = 0
 608              		@ link register save eliminated.
 609              	.LVL57:
 610 0000 10B4     		push	{r4}
 611              	.LCFI15:
 612              		.cfi_def_cfa_offset 4
 613              		.cfi_offset 4, -4
 465:Src/usbh_conf.c ****   HCD_HandleTypeDef *pHandle;
 466:Src/usbh_conf.c ****   pHandle = phost->pData;
 614              		.loc 1 466 0
 615 0002 D0F8C433 		ldr	r3, [r0, #964]
 616              	.LVL58:
ARM GAS  /tmp/cc8SAxjv.s 			page 20


 467:Src/usbh_conf.c **** 
 468:Src/usbh_conf.c ****   if(pHandle->hc[pipe].ep_is_in)
 617              		.loc 1 468 0
 618 0006 01EB8104 		add	r4, r1, r1, lsl #2
 619 000a E000     		lsls	r0, r4, #3
 620              	.LVL59:
 621 000c 0446     		mov	r4, r0
 622 000e 1844     		add	r0, r0, r3
 623 0010 90F83B00 		ldrb	r0, [r0, #59]	@ zero_extendqisi2
 624 0014 48B9     		cbnz	r0, .L54
 469:Src/usbh_conf.c ****   {
 470:Src/usbh_conf.c ****     pHandle->hc[pipe].toggle_in = toggle;
 471:Src/usbh_conf.c ****   }
 472:Src/usbh_conf.c ****   else
 473:Src/usbh_conf.c ****   {
 474:Src/usbh_conf.c ****     pHandle->hc[pipe].toggle_out = toggle;
 625              		.loc 1 474 0
 626 0016 01EB8101 		add	r1, r1, r1, lsl #2
 627              	.LVL60:
 628 001a C800     		lsls	r0, r1, #3
 629 001c 0344     		add	r3, r3, r0
 630              	.LVL61:
 631 001e 83F85120 		strb	r2, [r3, #81]
 632              	.LVL62:
 633              	.L52:
 475:Src/usbh_conf.c ****   }
 476:Src/usbh_conf.c **** 
 477:Src/usbh_conf.c ****   return USBH_OK;
 478:Src/usbh_conf.c **** }
 634              		.loc 1 478 0
 635 0022 0020     		movs	r0, #0
 636 0024 5DF8044B 		ldr	r4, [sp], #4
 637              	.LCFI16:
 638              		.cfi_remember_state
 639              		.cfi_restore 4
 640              		.cfi_def_cfa_offset 0
 641 0028 7047     		bx	lr
 642              	.LVL63:
 643              	.L54:
 644              	.LCFI17:
 645              		.cfi_restore_state
 470:Src/usbh_conf.c ****   }
 646              		.loc 1 470 0
 647 002a 2344     		add	r3, r3, r4
 648              	.LVL64:
 649 002c 83F85020 		strb	r2, [r3, #80]
 650              	.LVL65:
 651 0030 F7E7     		b	.L52
 652              		.cfi_endproc
 653              	.LFE153:
 655              		.section	.text.USBH_LL_GetToggle,"ax",%progbits
 656              		.align	1
 657              		.global	USBH_LL_GetToggle
 658              		.syntax unified
 659              		.thumb
 660              		.thumb_func
 661              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc8SAxjv.s 			page 21


 663              	USBH_LL_GetToggle:
 664              	.LFB154:
 479:Src/usbh_conf.c **** 
 480:Src/usbh_conf.c **** /**
 481:Src/usbh_conf.c ****   * @brief  Return the current toggle of a pipe.
 482:Src/usbh_conf.c ****   * @param  phost: Host handle
 483:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 484:Src/usbh_conf.c ****   * @retval toggle (0/1)
 485:Src/usbh_conf.c ****   */
 486:Src/usbh_conf.c **** uint8_t USBH_LL_GetToggle(USBH_HandleTypeDef *phost, uint8_t pipe)
 487:Src/usbh_conf.c **** {
 665              		.loc 1 487 0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 0
 668              		@ frame_needed = 0, uses_anonymous_args = 0
 669              		@ link register save eliminated.
 670              	.LVL66:
 488:Src/usbh_conf.c ****   uint8_t toggle = 0;
 489:Src/usbh_conf.c ****   HCD_HandleTypeDef *pHandle;
 490:Src/usbh_conf.c ****   pHandle = phost->pData;
 671              		.loc 1 490 0
 672 0000 D0F8C433 		ldr	r3, [r0, #964]
 673              	.LVL67:
 491:Src/usbh_conf.c **** 
 492:Src/usbh_conf.c ****   if(pHandle->hc[pipe].ep_is_in)
 674              		.loc 1 492 0
 675 0004 01EB8100 		add	r0, r1, r1, lsl #2
 676              	.LVL68:
 677 0008 C200     		lsls	r2, r0, #3
 678 000a 1046     		mov	r0, r2
 679 000c 1A44     		add	r2, r2, r3
 680 000e 92F83B20 		ldrb	r2, [r2, #59]	@ zero_extendqisi2
 681 0012 32B9     		cbnz	r2, .L58
 493:Src/usbh_conf.c ****   {
 494:Src/usbh_conf.c ****     toggle = pHandle->hc[pipe].toggle_in;
 495:Src/usbh_conf.c ****   }
 496:Src/usbh_conf.c ****   else
 497:Src/usbh_conf.c ****   {
 498:Src/usbh_conf.c ****     toggle = pHandle->hc[pipe].toggle_out;
 682              		.loc 1 498 0
 683 0014 01EB8101 		add	r1, r1, r1, lsl #2
 684              	.LVL69:
 685 0018 CA00     		lsls	r2, r1, #3
 686 001a 1344     		add	r3, r3, r2
 687              	.LVL70:
 688 001c 93F85100 		ldrb	r0, [r3, #81]	@ zero_extendqisi2
 689              	.LVL71:
 499:Src/usbh_conf.c ****   }
 500:Src/usbh_conf.c ****   return toggle;
 501:Src/usbh_conf.c **** }
 690              		.loc 1 501 0
 691 0020 7047     		bx	lr
 692              	.LVL72:
 693              	.L58:
 494:Src/usbh_conf.c ****   }
 694              		.loc 1 494 0
 695 0022 0344     		add	r3, r3, r0
ARM GAS  /tmp/cc8SAxjv.s 			page 22


 696              	.LVL73:
 697 0024 93F85000 		ldrb	r0, [r3, #80]	@ zero_extendqisi2
 698              	.LVL74:
 699 0028 7047     		bx	lr
 700              		.cfi_endproc
 701              	.LFE154:
 703              		.section	.text.USBH_Delay,"ax",%progbits
 704              		.align	1
 705              		.global	USBH_Delay
 706              		.syntax unified
 707              		.thumb
 708              		.thumb_func
 709              		.fpu fpv4-sp-d16
 711              	USBH_Delay:
 712              	.LFB155:
 502:Src/usbh_conf.c **** 
 503:Src/usbh_conf.c **** /**
 504:Src/usbh_conf.c ****   * @brief  Delay routine for the USB Host Library
 505:Src/usbh_conf.c ****   * @param  Delay: Delay in ms
 506:Src/usbh_conf.c ****   * @retval None
 507:Src/usbh_conf.c ****   */
 508:Src/usbh_conf.c **** void USBH_Delay(uint32_t Delay)
 509:Src/usbh_conf.c **** {
 713              		.loc 1 509 0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 0, uses_anonymous_args = 0
 717              	.LVL75:
 718 0000 08B5     		push	{r3, lr}
 719              	.LCFI18:
 720              		.cfi_def_cfa_offset 8
 721              		.cfi_offset 3, -8
 722              		.cfi_offset 14, -4
 510:Src/usbh_conf.c ****   HAL_Delay(Delay);
 723              		.loc 1 510 0
 724 0002 FFF7FEFF 		bl	HAL_Delay
 725              	.LVL76:
 511:Src/usbh_conf.c **** }
 726              		.loc 1 511 0
 727 0006 08BD     		pop	{r3, pc}
 728              		.cfi_endproc
 729              	.LFE155:
 731              		.section	.text.USBH_Get_USB_Status,"ax",%progbits
 732              		.align	1
 733              		.global	USBH_Get_USB_Status
 734              		.syntax unified
 735              		.thumb
 736              		.thumb_func
 737              		.fpu fpv4-sp-d16
 739              	USBH_Get_USB_Status:
 740              	.LFB156:
 512:Src/usbh_conf.c **** 
 513:Src/usbh_conf.c **** /**
 514:Src/usbh_conf.c ****   * @brief  Retuns the USB status depending on the HAL status:
 515:Src/usbh_conf.c ****   * @param  hal_status: HAL status
 516:Src/usbh_conf.c ****   * @retval USB status
 517:Src/usbh_conf.c ****   */
ARM GAS  /tmp/cc8SAxjv.s 			page 23


 518:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_Get_USB_Status(HAL_StatusTypeDef hal_status)
 519:Src/usbh_conf.c **** {
 741              		.loc 1 519 0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 745              		@ link register save eliminated.
 746              	.LVL77:
 520:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 521:Src/usbh_conf.c **** 
 522:Src/usbh_conf.c ****   switch (hal_status)
 747              		.loc 1 522 0
 748 0000 18B1     		cbz	r0, .L63
 749 0002 0228     		cmp	r0, #2
 750 0004 03D0     		beq	.L64
 523:Src/usbh_conf.c ****   {
 524:Src/usbh_conf.c ****     case HAL_OK :
 525:Src/usbh_conf.c ****       usb_status = USBH_OK;
 526:Src/usbh_conf.c ****     break;
 527:Src/usbh_conf.c ****     case HAL_ERROR :
 528:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 751              		.loc 1 528 0
 752 0006 0220     		movs	r0, #2
 753              	.LVL78:
 529:Src/usbh_conf.c ****     break;
 530:Src/usbh_conf.c ****     case HAL_BUSY :
 531:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 532:Src/usbh_conf.c ****     break;
 533:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 534:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 535:Src/usbh_conf.c ****     break;
 536:Src/usbh_conf.c ****     default :
 537:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 538:Src/usbh_conf.c ****     break;
 539:Src/usbh_conf.c ****   }
 540:Src/usbh_conf.c ****   return usb_status;
 541:Src/usbh_conf.c **** }
 754              		.loc 1 541 0
 755 0008 7047     		bx	lr
 756              	.LVL79:
 757              	.L63:
 525:Src/usbh_conf.c ****     break;
 758              		.loc 1 525 0
 759 000a 0020     		movs	r0, #0
 760              	.LVL80:
 761 000c 7047     		bx	lr
 762              	.LVL81:
 763              	.L64:
 531:Src/usbh_conf.c ****     break;
 764              		.loc 1 531 0
 765 000e 0120     		movs	r0, #1
 766              	.LVL82:
 532:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 767              		.loc 1 532 0
 768 0010 7047     		bx	lr
 769              		.cfi_endproc
 770              	.LFE156:
ARM GAS  /tmp/cc8SAxjv.s 			page 24


 772              		.section	.text.USBH_LL_DeInit,"ax",%progbits
 773              		.align	1
 774              		.global	USBH_LL_DeInit
 775              		.syntax unified
 776              		.thumb
 777              		.thumb_func
 778              		.fpu fpv4-sp-d16
 780              	USBH_LL_DeInit:
 781              	.LFB142:
 226:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 782              		.loc 1 226 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786              	.LVL83:
 787 0000 08B5     		push	{r3, lr}
 788              	.LCFI19:
 789              		.cfi_def_cfa_offset 8
 790              		.cfi_offset 3, -8
 791              		.cfi_offset 14, -4
 792              	.LVL84:
 230:Src/usbh_conf.c ****   
 793              		.loc 1 230 0
 794 0002 D0F8C403 		ldr	r0, [r0, #964]
 795              	.LVL85:
 796 0006 FFF7FEFF 		bl	HAL_HCD_DeInit
 797              	.LVL86:
 232:Src/usbh_conf.c ****   
 798              		.loc 1 232 0
 799 000a FFF7FEFF 		bl	USBH_Get_USB_Status
 800              	.LVL87:
 235:Src/usbh_conf.c **** 
 801              		.loc 1 235 0
 802 000e 08BD     		pop	{r3, pc}
 803              		.cfi_endproc
 804              	.LFE142:
 806              		.section	.text.USBH_LL_Start,"ax",%progbits
 807              		.align	1
 808              		.global	USBH_LL_Start
 809              		.syntax unified
 810              		.thumb
 811              		.thumb_func
 812              		.fpu fpv4-sp-d16
 814              	USBH_LL_Start:
 815              	.LFB143:
 243:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 816              		.loc 1 243 0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 0
 819              		@ frame_needed = 0, uses_anonymous_args = 0
 820              	.LVL88:
 821 0000 08B5     		push	{r3, lr}
 822              	.LCFI20:
 823              		.cfi_def_cfa_offset 8
 824              		.cfi_offset 3, -8
 825              		.cfi_offset 14, -4
 826              	.LVL89:
ARM GAS  /tmp/cc8SAxjv.s 			page 25


 247:Src/usbh_conf.c **** 
 827              		.loc 1 247 0
 828 0002 D0F8C403 		ldr	r0, [r0, #964]
 829              	.LVL90:
 830 0006 FFF7FEFF 		bl	HAL_HCD_Start
 831              	.LVL91:
 249:Src/usbh_conf.c ****   
 832              		.loc 1 249 0
 833 000a FFF7FEFF 		bl	USBH_Get_USB_Status
 834              	.LVL92:
 252:Src/usbh_conf.c **** 
 835              		.loc 1 252 0
 836 000e 08BD     		pop	{r3, pc}
 837              		.cfi_endproc
 838              	.LFE143:
 840              		.section	.text.USBH_LL_Stop,"ax",%progbits
 841              		.align	1
 842              		.global	USBH_LL_Stop
 843              		.syntax unified
 844              		.thumb
 845              		.thumb_func
 846              		.fpu fpv4-sp-d16
 848              	USBH_LL_Stop:
 849              	.LFB144:
 260:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 850              		.loc 1 260 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854              	.LVL93:
 855 0000 08B5     		push	{r3, lr}
 856              	.LCFI21:
 857              		.cfi_def_cfa_offset 8
 858              		.cfi_offset 3, -8
 859              		.cfi_offset 14, -4
 860              	.LVL94:
 264:Src/usbh_conf.c **** 
 861              		.loc 1 264 0
 862 0002 D0F8C403 		ldr	r0, [r0, #964]
 863              	.LVL95:
 864 0006 FFF7FEFF 		bl	HAL_HCD_Stop
 865              	.LVL96:
 266:Src/usbh_conf.c ****  
 866              		.loc 1 266 0
 867 000a FFF7FEFF 		bl	USBH_Get_USB_Status
 868              	.LVL97:
 269:Src/usbh_conf.c **** 
 869              		.loc 1 269 0
 870 000e 08BD     		pop	{r3, pc}
 871              		.cfi_endproc
 872              	.LFE144:
 874              		.section	.text.USBH_LL_ResetPort,"ax",%progbits
 875              		.align	1
 876              		.global	USBH_LL_ResetPort
 877              		.syntax unified
 878              		.thumb
 879              		.thumb_func
ARM GAS  /tmp/cc8SAxjv.s 			page 26


 880              		.fpu fpv4-sp-d16
 882              	USBH_LL_ResetPort:
 883              	.LFB146:
 307:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 884              		.loc 1 307 0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 0, uses_anonymous_args = 0
 888              	.LVL98:
 889 0000 08B5     		push	{r3, lr}
 890              	.LCFI22:
 891              		.cfi_def_cfa_offset 8
 892              		.cfi_offset 3, -8
 893              		.cfi_offset 14, -4
 894              	.LVL99:
 311:Src/usbh_conf.c ****   
 895              		.loc 1 311 0
 896 0002 D0F8C403 		ldr	r0, [r0, #964]
 897              	.LVL100:
 898 0006 FFF7FEFF 		bl	HAL_HCD_ResetPort
 899              	.LVL101:
 313:Src/usbh_conf.c ****   
 900              		.loc 1 313 0
 901 000a FFF7FEFF 		bl	USBH_Get_USB_Status
 902              	.LVL102:
 316:Src/usbh_conf.c **** 
 903              		.loc 1 316 0
 904 000e 08BD     		pop	{r3, pc}
 905              		.cfi_endproc
 906              	.LFE146:
 908              		.section	.text.USBH_LL_OpenPipe,"ax",%progbits
 909              		.align	1
 910              		.global	USBH_LL_OpenPipe
 911              		.syntax unified
 912              		.thumb
 913              		.thumb_func
 914              		.fpu fpv4-sp-d16
 916              	USBH_LL_OpenPipe:
 917              	.LFB148:
 342:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 918              		.loc 1 342 0
 919              		.cfi_startproc
 920              		@ args = 12, pretend = 0, frame = 0
 921              		@ frame_needed = 0, uses_anonymous_args = 0
 922              	.LVL103:
 923 0000 10B5     		push	{r4, lr}
 924              	.LCFI23:
 925              		.cfi_def_cfa_offset 8
 926              		.cfi_offset 4, -8
 927              		.cfi_offset 14, -4
 928 0002 84B0     		sub	sp, sp, #16
 929              	.LCFI24:
 930              		.cfi_def_cfa_offset 24
 931              	.LVL104:
 346:Src/usbh_conf.c ****                                dev_address, speed, ep_type, mps);
 932              		.loc 1 346 0
 933 0004 D0F8C403 		ldr	r0, [r0, #964]
ARM GAS  /tmp/cc8SAxjv.s 			page 27


 934              	.LVL105:
 935 0008 BDF82040 		ldrh	r4, [sp, #32]
 936 000c 0294     		str	r4, [sp, #8]
 937 000e 9DF81C40 		ldrb	r4, [sp, #28]	@ zero_extendqisi2
 938 0012 0194     		str	r4, [sp, #4]
 939 0014 9DF81840 		ldrb	r4, [sp, #24]	@ zero_extendqisi2
 940 0018 0094     		str	r4, [sp]
 941 001a FFF7FEFF 		bl	HAL_HCD_HC_Init
 942              	.LVL106:
 349:Src/usbh_conf.c ****   
 943              		.loc 1 349 0
 944 001e FFF7FEFF 		bl	USBH_Get_USB_Status
 945              	.LVL107:
 352:Src/usbh_conf.c **** 
 946              		.loc 1 352 0
 947 0022 04B0     		add	sp, sp, #16
 948              	.LCFI25:
 949              		.cfi_def_cfa_offset 8
 950              		@ sp needed
 951 0024 10BD     		pop	{r4, pc}
 952              		.cfi_endproc
 953              	.LFE148:
 955              		.section	.text.USBH_LL_ClosePipe,"ax",%progbits
 956              		.align	1
 957              		.global	USBH_LL_ClosePipe
 958              		.syntax unified
 959              		.thumb
 960              		.thumb_func
 961              		.fpu fpv4-sp-d16
 963              	USBH_LL_ClosePipe:
 964              	.LFB149:
 361:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 965              		.loc 1 361 0
 966              		.cfi_startproc
 967              		@ args = 0, pretend = 0, frame = 0
 968              		@ frame_needed = 0, uses_anonymous_args = 0
 969              	.LVL108:
 970 0000 08B5     		push	{r3, lr}
 971              	.LCFI26:
 972              		.cfi_def_cfa_offset 8
 973              		.cfi_offset 3, -8
 974              		.cfi_offset 14, -4
 975              	.LVL109:
 365:Src/usbh_conf.c **** 
 976              		.loc 1 365 0
 977 0002 D0F8C403 		ldr	r0, [r0, #964]
 978              	.LVL110:
 979 0006 FFF7FEFF 		bl	HAL_HCD_HC_Halt
 980              	.LVL111:
 367:Src/usbh_conf.c ****   
 981              		.loc 1 367 0
 982 000a FFF7FEFF 		bl	USBH_Get_USB_Status
 983              	.LVL112:
 370:Src/usbh_conf.c **** 
 984              		.loc 1 370 0
 985 000e 08BD     		pop	{r3, pc}
 986              		.cfi_endproc
ARM GAS  /tmp/cc8SAxjv.s 			page 28


 987              	.LFE149:
 989              		.section	.text.USBH_LL_SubmitURB,"ax",%progbits
 990              		.align	1
 991              		.global	USBH_LL_SubmitURB
 992              		.syntax unified
 993              		.thumb
 994              		.thumb_func
 995              		.fpu fpv4-sp-d16
 997              	USBH_LL_SubmitURB:
 998              	.LFB150:
 402:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 999              		.loc 1 402 0
 1000              		.cfi_startproc
 1001              		@ args = 16, pretend = 0, frame = 0
 1002              		@ frame_needed = 0, uses_anonymous_args = 0
 1003              	.LVL113:
 1004 0000 10B5     		push	{r4, lr}
 1005              	.LCFI27:
 1006              		.cfi_def_cfa_offset 8
 1007              		.cfi_offset 4, -8
 1008              		.cfi_offset 14, -4
 1009 0002 84B0     		sub	sp, sp, #16
 1010              	.LCFI28:
 1011              		.cfi_def_cfa_offset 24
 1012              	.LVL114:
 406:Src/usbh_conf.c ****                                         ep_type, token, pbuff, length,
 1013              		.loc 1 406 0
 1014 0004 D0F8C403 		ldr	r0, [r0, #964]
 1015              	.LVL115:
 1016 0008 9DF82440 		ldrb	r4, [sp, #36]	@ zero_extendqisi2
 1017 000c 0394     		str	r4, [sp, #12]
 1018 000e BDF82040 		ldrh	r4, [sp, #32]
 1019 0012 0294     		str	r4, [sp, #8]
 1020 0014 079C     		ldr	r4, [sp, #28]
 1021 0016 0194     		str	r4, [sp, #4]
 1022 0018 9DF81840 		ldrb	r4, [sp, #24]	@ zero_extendqisi2
 1023 001c 0094     		str	r4, [sp]
 1024 001e FFF7FEFF 		bl	HAL_HCD_HC_SubmitRequest
 1025              	.LVL116:
 409:Src/usbh_conf.c ****   
 1026              		.loc 1 409 0
 1027 0022 FFF7FEFF 		bl	USBH_Get_USB_Status
 1028              	.LVL117:
 412:Src/usbh_conf.c **** 
 1029              		.loc 1 412 0
 1030 0026 04B0     		add	sp, sp, #16
 1031              	.LCFI29:
 1032              		.cfi_def_cfa_offset 8
 1033              		@ sp needed
 1034 0028 10BD     		pop	{r4, pc}
 1035              		.cfi_endproc
 1036              	.LFE150:
 1038              		.comm	hhcd_USB_OTG_FS,708,4
 1039              		.text
 1040              	.Letext0:
 1041              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1042              		.file 3 "/usr/arm-none-eabi/include/sys/lock.h"
ARM GAS  /tmp/cc8SAxjv.s 			page 29


 1043              		.file 4 "/usr/arm-none-eabi/include/sys/_types.h"
 1044              		.file 5 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 1045              		.file 6 "/usr/arm-none-eabi/include/sys/reent.h"
 1046              		.file 7 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1047              		.file 8 "/usr/arm-none-eabi/include/stdlib.h"
 1048              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 1049              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1050              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f412zx.h"
 1051              		.file 12 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1052              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1053              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1054              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usb.h"
 1055              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_hcd.h"
 1056              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1057              		.file 18 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 1058              		.file 19 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 1059              		.file 20 "Inc/usbh_platform.h"
 1060              		.file 21 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_core.h"
 1061              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/cc8SAxjv.s 			page 30


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbh_conf.c
     /tmp/cc8SAxjv.s:18     .text.HAL_HCD_MspInit:0000000000000000 $t
     /tmp/cc8SAxjv.s:25     .text.HAL_HCD_MspInit:0000000000000000 HAL_HCD_MspInit
     /tmp/cc8SAxjv.s:126    .text.HAL_HCD_MspInit:000000000000007c $d
     /tmp/cc8SAxjv.s:132    .text.HAL_HCD_MspDeInit:0000000000000000 $t
     /tmp/cc8SAxjv.s:139    .text.HAL_HCD_MspDeInit:0000000000000000 HAL_HCD_MspDeInit
     /tmp/cc8SAxjv.s:181    .text.HAL_HCD_MspDeInit:0000000000000028 $d
     /tmp/cc8SAxjv.s:187    .text.HAL_HCD_SOF_Callback:0000000000000000 $t
     /tmp/cc8SAxjv.s:194    .text.HAL_HCD_SOF_Callback:0000000000000000 HAL_HCD_SOF_Callback
     /tmp/cc8SAxjv.s:217    .text.HAL_HCD_Connect_Callback:0000000000000000 $t
     /tmp/cc8SAxjv.s:224    .text.HAL_HCD_Connect_Callback:0000000000000000 HAL_HCD_Connect_Callback
     /tmp/cc8SAxjv.s:247    .text.HAL_HCD_Disconnect_Callback:0000000000000000 $t
     /tmp/cc8SAxjv.s:254    .text.HAL_HCD_Disconnect_Callback:0000000000000000 HAL_HCD_Disconnect_Callback
     /tmp/cc8SAxjv.s:277    .text.HAL_HCD_HC_NotifyURBChange_Callback:0000000000000000 $t
     /tmp/cc8SAxjv.s:284    .text.HAL_HCD_HC_NotifyURBChange_Callback:0000000000000000 HAL_HCD_HC_NotifyURBChange_Callback
     /tmp/cc8SAxjv.s:298    .text.HAL_HCD_PortEnabled_Callback:0000000000000000 $t
     /tmp/cc8SAxjv.s:305    .text.HAL_HCD_PortEnabled_Callback:0000000000000000 HAL_HCD_PortEnabled_Callback
     /tmp/cc8SAxjv.s:328    .text.HAL_HCD_PortDisabled_Callback:0000000000000000 $t
     /tmp/cc8SAxjv.s:335    .text.HAL_HCD_PortDisabled_Callback:0000000000000000 HAL_HCD_PortDisabled_Callback
     /tmp/cc8SAxjv.s:358    .text.USBH_LL_Init:0000000000000000 $t
     /tmp/cc8SAxjv.s:365    .text.USBH_LL_Init:0000000000000000 USBH_LL_Init
     /tmp/cc8SAxjv.s:437    .text.USBH_LL_Init:0000000000000050 $d
                            *COM*:00000000000002c4 hhcd_USB_OTG_FS
     /tmp/cc8SAxjv.s:442    .text.USBH_LL_GetSpeed:0000000000000000 $t
     /tmp/cc8SAxjv.s:449    .text.USBH_LL_GetSpeed:0000000000000000 USBH_LL_GetSpeed
     /tmp/cc8SAxjv.s:491    .text.USBH_LL_GetLastXferSize:0000000000000000 $t
     /tmp/cc8SAxjv.s:498    .text.USBH_LL_GetLastXferSize:0000000000000000 USBH_LL_GetLastXferSize
     /tmp/cc8SAxjv.s:521    .text.USBH_LL_GetURBState:0000000000000000 $t
     /tmp/cc8SAxjv.s:528    .text.USBH_LL_GetURBState:0000000000000000 USBH_LL_GetURBState
     /tmp/cc8SAxjv.s:551    .text.USBH_LL_DriverVBUS:0000000000000000 $t
     /tmp/cc8SAxjv.s:558    .text.USBH_LL_DriverVBUS:0000000000000000 USBH_LL_DriverVBUS
     /tmp/cc8SAxjv.s:595    .text.USBH_LL_SetToggle:0000000000000000 $t
     /tmp/cc8SAxjv.s:602    .text.USBH_LL_SetToggle:0000000000000000 USBH_LL_SetToggle
     /tmp/cc8SAxjv.s:656    .text.USBH_LL_GetToggle:0000000000000000 $t
     /tmp/cc8SAxjv.s:663    .text.USBH_LL_GetToggle:0000000000000000 USBH_LL_GetToggle
     /tmp/cc8SAxjv.s:704    .text.USBH_Delay:0000000000000000 $t
     /tmp/cc8SAxjv.s:711    .text.USBH_Delay:0000000000000000 USBH_Delay
     /tmp/cc8SAxjv.s:732    .text.USBH_Get_USB_Status:0000000000000000 $t
     /tmp/cc8SAxjv.s:739    .text.USBH_Get_USB_Status:0000000000000000 USBH_Get_USB_Status
     /tmp/cc8SAxjv.s:773    .text.USBH_LL_DeInit:0000000000000000 $t
     /tmp/cc8SAxjv.s:780    .text.USBH_LL_DeInit:0000000000000000 USBH_LL_DeInit
     /tmp/cc8SAxjv.s:807    .text.USBH_LL_Start:0000000000000000 $t
     /tmp/cc8SAxjv.s:814    .text.USBH_LL_Start:0000000000000000 USBH_LL_Start
     /tmp/cc8SAxjv.s:841    .text.USBH_LL_Stop:0000000000000000 $t
     /tmp/cc8SAxjv.s:848    .text.USBH_LL_Stop:0000000000000000 USBH_LL_Stop
     /tmp/cc8SAxjv.s:875    .text.USBH_LL_ResetPort:0000000000000000 $t
     /tmp/cc8SAxjv.s:882    .text.USBH_LL_ResetPort:0000000000000000 USBH_LL_ResetPort
     /tmp/cc8SAxjv.s:909    .text.USBH_LL_OpenPipe:0000000000000000 $t
     /tmp/cc8SAxjv.s:916    .text.USBH_LL_OpenPipe:0000000000000000 USBH_LL_OpenPipe
     /tmp/cc8SAxjv.s:956    .text.USBH_LL_ClosePipe:0000000000000000 $t
     /tmp/cc8SAxjv.s:963    .text.USBH_LL_ClosePipe:0000000000000000 USBH_LL_ClosePipe
     /tmp/cc8SAxjv.s:990    .text.USBH_LL_SubmitURB:0000000000000000 $t
     /tmp/cc8SAxjv.s:997    .text.USBH_LL_SubmitURB:0000000000000000 USBH_LL_SubmitURB

UNDEFINED SYMBOLS
HAL_GPIO_Init
ARM GAS  /tmp/cc8SAxjv.s 			page 31


HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
USBH_LL_IncTimer
USBH_LL_Connect
USBH_LL_Disconnect
USBH_LL_PortEnabled
USBH_LL_PortDisabled
HAL_HCD_Init
HAL_HCD_GetCurrentFrame
USBH_LL_SetTimer
Error_Handler
HAL_HCD_GetCurrentSpeed
HAL_HCD_HC_GetXferCount
HAL_HCD_HC_GetURBState
HAL_Delay
MX_DriverVbusFS
HAL_HCD_DeInit
HAL_HCD_Start
HAL_HCD_Stop
HAL_HCD_ResetPort
HAL_HCD_HC_Init
HAL_HCD_HC_Halt
HAL_HCD_HC_SubmitRequest
